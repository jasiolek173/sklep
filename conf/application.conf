akka {
  log-config-on-start = true
  loglevel = INFO
}


play.http.secret.key = "changeme"

play.modules {
}
play.i18n {
  langs = ["en"]
}
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

play.filters {
  enabled += play.filters.cors.CORSFilter
}

play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.


}
play.modules.enabled += "modules.SilhouetteModule"

play.filters {

  cors {
    pathPrefixes = ["/"]
    allowedOrigins = null
    allowedHttpMethods = null
    preflightMaxAge = 1 hour
    allowedHttpHeaders = null
    supportsCredentials = true
  }

  ## CSRF Filter
  # https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
  # https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
  # ~~~~~
  # Play supports multiple methods for verifying that a request is not a CSRF request.
  # The primary mechanism is a CSRF token. This token gets placed either in the query string
  # or body of every form submitted, and also gets placed in the users session.
  # Play then verifies that both tokens are present and match.
  csrf {
    # Sets the cookie to be sent only over HTTPS
    #cookie.secure = true

    # Defaults to CSRFErrorHandler in the root package.
    #errorHandler = MyCSRFErrorHandler
  }


  headers {
  }
  hosts {
  }
}


play.evolutions {
  enabled = true
  db.default.enabled = true
}

slick.dbs.default.driver = "slick.driver.SQLiteDriver$"
slick.dbs.default.db.driver = "org.sqlite.JDBC"
slick.dbs.default.db.url = "jdbc:sqlite:ebiznes.sqlite"

include "silhouette.conf"
